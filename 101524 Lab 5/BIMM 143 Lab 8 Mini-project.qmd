---
title: "Class 8 mini project"
author: "Sofia Lanaspa, A17105313"
format: pdf
---

PCA practical issue: larger range and values in a column of the data set are given more importance, but we need to make sure each feature contributes equally to the ---> do this with scaling inside prcomp()
```{r}
head(mtcars)
apply(mtcars,2,sd)
```

Scale our data
```{r}
x <- scale(mtcars)
head(x)
round(colMeans(x),2) #mean = 0, st.dev = 1
prcomp
```
Using scale in prcomp usually passes values to the scale function - we always need to choose wether or not to scale data

## 1. Exploratory data analysis
```{r}
# Save your input data file into your Project directory
fna.data <- "WisconsinCancer.csv"

# Complete the following code to input the data and store as wisc.df
wisc.df <- read.csv(fna.data, row.names=1)
```

```{r}
# We can use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
# Create diagnosis vector for later 
diagnosis <- as.factor(wisc.df[,1])
diagnosis
```

#### QUESTION 1 
Q1. How many observations are in this dataset?
```{r}
nrow(wisc.df) 
# 569 observations
```

#### QUESTION 2 
Q2. How many of the observations have a malignant diagnosis?
```{r}
sum(diagnosis=="M") 
table(diagnosis)
# 212 malignant
```

Remove first column 'diagnosis' from data frame, this is the asnwer we need to compare to our analysis result
```{r}
# Use -1 here to remove the first column
wisc.data <- wisc.df[,-1]
head(wisc.data)
```

#### QUESTION 3 
Q3. How many variables/features in the data are suffixed with _mean?
```{r}
colsWithMean <- grep("_mean",colnames(wisc.df))
length(colsWithMean)
# 10 variables are suffixed with _mean
```
## 2. Principal component analysis 
```{r}
# Check column means and standard deviations
colMeans(wisc.data)
apply(wisc.data,2,sd)
```

```{r}
# Perform PCA on wisc.data by completing the following code
# SCALE
wisc.pr <- prcomp(wisc.data, scale=T)
```

#### QUESTION 4 
Q4. From your results, what proportion of the original variance is captured by the first principal components (PC1)?
```{r}
# Find proportion variance of each PC
summary(wisc.pr) 
# 44.27%
```

#### QUESTION 5 
Q5. How many principal components (PCs) are required to describe at least 70% of the original variance in the data?
```{r}
# 3 PCs
```

#### QUESTION 6 
Q6. How many principal components (PCs) are required to describe at least 90% of the original variance in the data?
```{r}
# 7 PCs
```

#### QUESTION 7
Q7. What stands out to you about this plot? Is it easy or difficult to understand? Why?
```{r}
biplot(wisc.pr)
# So difficult to understand, too many components on top of each other 
```
```{r}
# wisc.pr$x meaning??
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,2], 
     col=diagnosis , xlab = "PC1", ylab = "PC2")
```

#### QUESTION 8 
Q8. Generate a similar plot for principal components 1 and 3. What do you notice about these plots?
```{r}
# Scatter plot observations by components 1 and 2
plot(wisc.pr$x[,1], wisc.pr$x[,3],
     col=diagnosis,xlab = "PC1", ylab = "PC3") #diagnosis shown by color
```
The PC axis are the most important axis for the data

PC1 is the axis with most variation, PC2 is the axis with second most variation, etc. 

Find the middle of each PC axis and it is 0, then measure the points based on how far/close they are from it, this is the **influence** of the

#### ggplot
```{r}
# Create a data.frame for ggplot
df <- as.data.frame(wisc.pr$x)
df$diagnosis <- diagnosis

# Load the ggplot2 package
library(ggplot2)

# Make a scatter plot colored by diagnosis
ggplot(df) + 
  aes(PC1, PC2, col=diagnosis) + 
  geom_point() + 
  labs(title = "PCA Scatter Plot", x = "PC 1", y = "PC 2") +
  theme_minimal()
```

#### variance
```{r}
# Calculate variance of each component
pr.var <- wisc.pr$sdev^2
head(pr.var)
```

```{r}
# Variance explained by each principal component: pve
pve <- pr.var / sum(pr.var)

# Plot variance explained for each principal component
plot(pve, xlab = "Principal Component", 
     ylab = "Proportion of Variance Explained", 
     ylim = c(0, 1), type = "o")
```

```{r}
# Alternative scree plot of the same data, note data driven y-axis
barplot(pve, ylab = "Precent of Variance Explained",
     names.arg=paste0("PC",1:length(pve)), las=2, axes = FALSE)
axis(2, at=pve, labels=round(pve,2)*100 )
```

```{r}
## ggplot based graph
#install.packages("factoextra")
library(factoextra)
fviz_eig(wisc.pr, addlabels = TRUE)
```

#### QUESTION 9 
Q9. For the first principal component, what is the component of the loading vector (i.e. wisc.pr$rotation[,1]) for the feature concave.points_mean?
```{r}
wisc.pr$rotation["concave.points_mean",1]
```

#### QUESTION 10 
Q10. What is the minimum number of principal components required to explain 80% of the variance of the data?
```{r}
# 5 PCs
```

#### QUESTION 11 
Q11. Using the plot() and abline() functions, what is the height at which the clustering model has 4 clusters?
```{r}
# Scale the wisc.data data using the "scale()" function
data.scaled <- scale(wisc.data)
# Get distance of data
data.dist <- dist(data.scaled)
# Make hierarchy tree
wisc.hclust <- hclust(data.dist, method="complete")
```

Class walk through
```{r}
# distance matrix from PCA result
d <- dist(wisc.pr$x[,1:3])
hc <- hclust(d,method="ward.D2")
plot(hc)
```

Cut the tree into 2 groups/branches/clusters
```{r}
grps <- cutree(hc,k=2)
```

```{r}
plot(wisc.pr$x,col=grps)
```


```{r}
?abline

plot(hc, main = "Hierarchical Clustering Dendogram", 
     xlab = "Samples", ylab = "Height")
# Make line to get only 4 clusters
abline(h=1800, col="red", lty=2)
```
#### QUESTION 12 
Q12. Can you find a better cluster vs diagnoses match by cutting into a different number of clusters between 2 and 10?
```{r}
# The best cluster vs diagnoses is done by cutting 2 clusters
```


#### QUESTION 13
Q13. Which method gives your favorite results for the same data.dist dataset? Explain your reasoning.
```{r}
# The PCA scattter plot is my favorite representation of the data since it clearly shows the two different clusters by colors and they are easy to tell appart from each other
```

#### QUESTION 14
Q14. How well does k-means separate the two diagnoses? How does it compare to your hclust results?
```{r}
table(diagnosis,grps)
# This table clearly shows how many benign and malignant tumors in each cluster
```
#### QUESTION 16
Q16. How well do the k-means and hierarchical clustering models you created in previous sections (i.e. before PCA) do in terms of separating the diagnoses? Again, use the table() function to compare the output of each model (wisc.km$cluster and wisc.hclust.clusters) with the vector containing the actual diagnoses.
```{r}
#table(wisc.km$cluster)
#table(wisc.hclust.clusters)
# I think k-means and hierarchical clustering models do not work well for separating diagnoses because there are too many components to take into account, so looking at all the data points on top of each other is imposible to get information. Hierarchical clustering might work but it also becomes confusing once there are more components. PCA helps simplyfy this and show the differences between cells with different diagnoses much more clearly. 
```







